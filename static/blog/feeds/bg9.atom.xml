<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>CDW11 網頁 (虎尾科大MDE)</title><link href="http://cdw11-40323250.rhcloud.com/static/blog/" rel="alternate"></link><link href="http://cdw11-40323250.rhcloud.com/static/blog/feeds/bg9.atom.xml" rel="self"></link><id>http://cdw11-40323250.rhcloud.com/static/blog/</id><updated>2016-06-05T08:20:29+08:00</updated><entry><title>40323250 期末報告</title><link href="http://cdw11-40323250.rhcloud.com/static/blog/40323250-qi-mo-bao-gao.html" rel="alternate"></link><updated>2016-06-05T08:20:29+08:00</updated><author><name>40323250</name></author><id>tag:cdw11-40323250.rhcloud.com,2016-06-05:static/blog/40323250-qi-mo-bao-gao.html</id><summary type="html">&lt;p&gt;期末報告 (統整)

&lt;h3&gt;鍊條上30下18齒&lt;/h3&gt;
&lt;h3&gt;從老師的18及30齒中，找到eighteenthirty 或是 其他程式拿來修改，我是用eighteenthirty，然後將兩部分的鏈條分開，並定位到(0,0)位置，就可以開始計算需要移動的距離，就可以很容易的接合，但是修改容易寫程式難，還是要想辦法搞懂程式才行。&lt;/h3&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/GrKllX7.png"&gt;&lt;br /&gt;
&lt;/br&gt;
&lt;h3&gt;2D齒輪嚙合&lt;/h3&gt;
&lt;pre class="brush: python"&gt;
@bg9_40323250.route('/gear_50')
def gear_50():
    outstring = '''
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8"&amp;gt;
    &amp;lt;title&amp;gt;網際 2D 繪圖&amp;lt;/title&amp;gt;
    &amp;lt;!-- IE 9: display inline SVG --&amp;gt;
    &amp;lt;meta http-equiv="X-UA-Compatible" content="IE=9"&amp;gt;
&amp;lt;script type="text/javascript" src="http://brython.info/src/brython_dist.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script type="text/javascript" src="http://2015fallhw.github.io/cptocadp/static/Cango-8v03.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script type="text/javascript" src="http://2015fallhw.github.io/cptocadp/static/Cango2D-7v01-min.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script type="text/javascript" src="http://2015fallhw.github.io/cptocadp/static/gearUtils-05.js"&amp;gt;&amp;lt;/script&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;script&amp;gt;
window.onload=function(){
brython(1);
}
&amp;lt;/script&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;canvas id='gear1' width='800' height='750'&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;script type="text/python"&amp;gt;&lt;/p&gt;
&lt;h1&gt;將 導入的 document 設為 doc 主要原因在於與舊程式碼相容&lt;/h1&gt;
&lt;p&gt;from browser import document as doc&lt;/p&gt;
&lt;h1&gt;由於 Python3 與 Javascript 程式碼已經不再混用, 因此來自 Javascript 的變數, 必須居中透過 window 物件轉換&lt;/h1&gt;
&lt;p&gt;from browser import window&lt;/p&gt;
&lt;h1&gt;針對 Javascript 既有的物件, 則必須透過 JSConstructor 轉換&lt;/h1&gt;
&lt;p&gt;from javascript import JSConstructor
import math&lt;/p&gt;
&lt;h1&gt;主要用來取得畫布大小&lt;/h1&gt;
&lt;p&gt;canvas = doc["gear1"]&lt;/p&gt;
&lt;h1&gt;此程式採用 Cango Javascript 程式庫繪圖, 因此無需 ctx&lt;/h1&gt;
&lt;h1&gt;ctx = canvas.getContext("2d")&lt;/h1&gt;
&lt;h1&gt;針對類別的轉換, 將 Cango.js 中的 Cango 物件轉為 Python cango 物件&lt;/h1&gt;
&lt;p&gt;cango = JSConstructor(window.Cango)&lt;/p&gt;
&lt;h1&gt;針對變數的轉換, shapeDefs 在 Cango 中資料型別為變數, 可以透過 window 轉換&lt;/h1&gt;
&lt;p&gt;shapedefs = window.shapeDefs&lt;/p&gt;
&lt;h1&gt;目前 Cango 結合 Animation 在 Brython 尚無法運作, 此刻只能繪製靜態圖形&lt;/h1&gt;
&lt;h1&gt;in CangoAnimation.js&lt;/h1&gt;
&lt;h1&gt;interpolate1 = window.interpolate&lt;/h1&gt;
&lt;h1&gt;Cobi 與 createGearTooth 都是 Cango Javascript 程式庫中的物件&lt;/h1&gt;
&lt;p&gt;cobj = JSConstructor(window.Cobj)
creategeartooth = JSConstructor(window.createGearTooth)&lt;/p&gt;
&lt;h1&gt;經由 Cango 轉換成 Brython 的 cango, 指定將圖畫在 id="plotarea" 的 canvas 上&lt;/h1&gt;
&lt;p&gt;cgo = cango("gear1")&lt;/p&gt;
&lt;h6&gt;&lt;/h6&gt;
&lt;h1&gt;畫正齒輪輪廓&lt;/h1&gt;
&lt;h6&gt;&lt;/h6&gt;
&lt;p&gt;def spur(cx, cy, m, n, pa, theta):
    # n 為齒數
    #n = 17
    # pa 為壓力角
    #pa = 25
    # m 為模數, 根據畫布的寬度, 計算適合的模數大小
    # Module = mm of pitch diameter per tooth
    #m = 0.8&lt;em&gt;canvas.width/n
    # pr 為節圓半徑
    pr = n&lt;/em&gt;m/2 # gear Pitch radius
    # generate gear
    data = creategeartooth(m, n, pa)
    # Brython 程式中的 print 會將資料印在 Browser 的 console 區
    #print(data)&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;gearTooth = cobj(data, &amp;quot;SHAPE&amp;quot;, {
        &amp;quot;fillColor&amp;quot;:&amp;quot;#ddd0dd&amp;quot;,
        &amp;quot;border&amp;quot;: True,
        &amp;quot;strokeColor&amp;quot;: &amp;quot;#606060&amp;quot; })
#gearTooth.rotate(180/n) # rotate gear 1/2 tooth to mesh, 請注意 rotate 角度為 degree
# theta 為角度
gearTooth.rotate(theta) 
# 單齒的齒形資料經過旋轉後, 將資料複製到 gear 物件中
gear = gearTooth.dup()
# gear 為單一齒的輪廓資料
#cgo.render(gearTooth)

# 利用單齒輪廓旋轉, 產生整個正齒輪外形
for i in range(1, n):
    # 將 gearTooth 中的資料複製到 newTooth
    newTooth = gearTooth.dup()
    # 配合迴圈, newTooth 的齒形資料進行旋轉, 然後利用 appendPath 方法, 將資料併入 gear
    newTooth.rotate(360*i/n)
    # appendPath 為 Cango 程式庫中的方法, 第二個變數為 True, 表示要刪除最前頭的 Move to SVG Path 標註符號
    gear.appendPath(newTooth, True) # trim move command = True

# 建立軸孔
# add axle hole, hr 為 hole radius
hr = 0.6*pr # diameter of gear shaft
shaft = cobj(shapedefs.circle(hr), &amp;quot;PATH&amp;quot;)
shaft.revWinding()
gear.appendPath(shaft) # retain the &amp;#39;moveTo&amp;#39; command for shaft sub path
gear.translate(cx, cy)
# render 繪出靜態正齒輪輪廓
cgo.render(gear)
# 接著繪製齒輪的基準線
deg = math.pi/180
Line = cobj([&amp;#39;M&amp;#39;, cx, cy, &amp;#39;L&amp;#39;, cx+pr*math.cos(theta*deg), cy+pr*math.sin(theta*deg)], &amp;quot;PATH&amp;quot;, {
      &amp;#39;strokeColor&amp;#39;:&amp;#39;blue&amp;#39;, &amp;#39;lineWidth&amp;#39;: 1})
cgo.render(Line)
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h1&gt;3個齒輪的齒數&lt;/h1&gt;
&lt;p&gt;n1 = 10
n2 = 12
n3 = 14
n4 = 16&lt;/p&gt;
&lt;h1&gt;m 為模數, 根據畫布的寬度, 計算適合的模數大小&lt;/h1&gt;
&lt;h1&gt;Module = mm of pitch diameter per tooth&lt;/h1&gt;
&lt;h1&gt;利用 80% 的畫布寬度進行繪圖&lt;/h1&gt;
&lt;h1&gt;計算模數的對應尺寸&lt;/h1&gt;
&lt;p&gt;m = canvas.width*0.8/(n1+n2+n3+n4)&lt;/p&gt;
&lt;h1&gt;根據齒數與模組計算各齒輪的節圓半徑&lt;/h1&gt;
&lt;p&gt;pr1 = n1&lt;em&gt;m/2
pr2 = n2&lt;/em&gt;m/2
pr3 = n3&lt;em&gt;m/2
pr4 = n4&lt;/em&gt;m/2&lt;/p&gt;
&lt;h1&gt;畫布左右兩側都保留畫布寬度的 10%&lt;/h1&gt;
&lt;h1&gt;依此計算對應的最左邊齒輪的軸心座標&lt;/h1&gt;
&lt;p&gt;cx = canvas.width*0.1+pr1
cy = canvas.height/2&lt;/p&gt;
&lt;h1&gt;pa 為壓力角&lt;/h1&gt;
&lt;p&gt;pa = 25&lt;/p&gt;
&lt;h1&gt;畫布左右兩側都保留畫布寬度的 10%&lt;/h1&gt;
&lt;h1&gt;依此計算對應的最左邊齒輪的軸心座標&lt;/h1&gt;
&lt;p&gt;cx = canvas.width*0.1+pr1
cy = canvas.height/2&lt;/p&gt;
&lt;h1&gt;pa 為壓力角&lt;/h1&gt;
&lt;p&gt;pa = 25&lt;/p&gt;
&lt;h1&gt;畫最左邊齒輪, 定位線旋轉角為 0, 軸心座標 (cx, cy)&lt;/h1&gt;
&lt;p&gt;spur(cx, cy, m, n1, pa, 0)&lt;/p&gt;
&lt;h1&gt;第2個齒輪將原始的定位線逆時鐘轉 180 度後, 與第1個齒輪正好齒頂與齒頂對齊&lt;/h1&gt;
&lt;h1&gt;只要第2個齒輪再逆時鐘或順時鐘轉動半齒的角度, 即可完成囓合&lt;/h1&gt;
&lt;h1&gt;每一個齒分別包括從齒根到齒頂的範圍, 涵蓋角度為 360/n, 因此所謂的半齒角度為 180/n&lt;/h1&gt;
&lt;p&gt;spur(cx+pr1+pr2, cy, m, n2, pa, 180-180/n2)&lt;/p&gt;
&lt;h1&gt;第2齒與第3齒的囓合, 首先假定第2齒的定位線在 theta 角為 0 的原始位置&lt;/h1&gt;
&lt;h1&gt;如此, 第3齒只要逆時鐘旋轉 180 度後, 再逆時鐘或順時鐘轉動半齒的角度, 即可與第2齒囓合&lt;/h1&gt;
&lt;h1&gt;但是第2齒為了與第一齒囓合時, 已經從原始定位線轉了 180-180/n2 度&lt;/h1&gt;
&lt;h1&gt;而當第2齒從與第3齒囓合的定位線, 逆時鐘旋轉 180-180/n2 角度後, 原先囓合的第3齒必須要再配合旋轉 (180-180/n2 )*n2/n3&lt;/h1&gt;
&lt;p&gt;spur(cx+pr1+pr2+pr2+pr3, cy, m, n3, pa, 180-180/n3+(180-180/n2)*n2/n3)&lt;/p&gt;
&lt;p&gt;spur(cx+pr1+pr2+pr2+pr3+pr3+pr4, cy, m, n4, pa, 180-180/n3&lt;em&gt;n3/n4+(180-180/n2)&lt;/em&gt;n2/n3&lt;em&gt;n3/n4+(180-180/n3)&lt;/em&gt;n3/n4)&lt;/p&gt;
&lt;p&gt;&amp;lt;/script&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;script type='text/javascript'&amp;gt;
var onWebChat={ar:[], set: function(a,b){if (typeof onWebChat_==='undefined'){this.ar.
push([a,b]);}else{onWebChat_.set(a,b);}},get:function(a){return(onWebChat_.get(a));},w
:(function(){ var ga=document.createElement('script'); ga.type = 'text/javascript';ga.
async=1;ga.src='//www.onwebchat.com/clientchat/795d781612868f02aa4bb0552c0655a5/1/1';
var s=document.getElementsByTagName('script')[0];s.parentNode.insertBefore(ga,s);})()}
&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
'''
    return outstring
&lt;/pre&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;h3&gt;完成圖&lt;/h3&gt;
&lt;img src="http://i.imgur.com/2lnrHnc.png"&gt;
&lt;/br&gt;
&lt;/br&gt;&lt;/p&gt;
&lt;h3&gt;gear_relations&lt;/h3&gt;

&lt;p&gt;&lt;img src="http://i.imgur.com/akWuKA7.png"&gt;&lt;/p&gt;</summary><category term="40323250"></category></entry><entry><title>40323250 cdw13報告</title><link href="http://cdw11-40323250.rhcloud.com/static/blog/40323250-cdw13bao-gao.html" rel="alternate"></link><updated>2016-06-05T08:20:29+08:00</updated><author><name>40323250</name></author><id>tag:cdw11-40323250.rhcloud.com,2016-06-05:static/blog/40323250-cdw13bao-gao.html</id><summary type="html">&lt;p&gt;cdw13內容規畫 :&lt;br /&gt;

&lt;h2&gt;將老師的鏈條轉90度&lt;/h2&gt;
&lt;br/&gt;
&lt;h3&gt;構想 : 將老師的eighteenthirty的起始角度轉90度之後，會有兩部分分開，只要將兩個圖形都定位到(0, 0)後，找到重疊的部分，再利用三角函數算出座標點差距，就可以接再一起了&lt;/h3&gt;
&lt;br/&gt;
&lt;h3&gt;完成圖:&lt;/h3&gt; 
&lt;img src="http://i.imgur.com/GrKllX7.png"&gt;  &lt;/p&gt;</summary><category term="40323250"></category></entry><entry><title>40323250 cdw11報告</title><link href="http://cdw11-40323250.rhcloud.com/static/blog/40323250-cdw11bao-gao.html" rel="alternate"></link><updated>2016-06-05T08:20:29+08:00</updated><author><name>40323250</name></author><id>tag:cdw11-40323250.rhcloud.com,2016-06-05:static/blog/40323250-cdw11bao-gao.html</id><summary type="html">&lt;p&gt;cdw11內容規畫 :&lt;br /&gt;

&lt;h3&gt;利用老師開放之鍊條程式碼，嘗試做出兩個鍊條，並能透過6個參數調整外角、x座標及y座標。&lt;/h3&gt;
&lt;br/&gt;
&lt;h3&gt;完成圖:&lt;/h3&gt;
&lt;img src="http://i.imgur.com/uFnrGsS.png"&gt; &lt;/p&gt;</summary><category term="40323250"></category></entry><entry><title>40323233 cdw11報告</title><link href="http://cdw11-40323250.rhcloud.com/static/blog/40323233-cdw11bao-gao.html" rel="alternate"></link><updated>2016-06-05T08:20:29+08:00</updated><author><name>40323233</name></author><id>tag:cdw11-40323250.rhcloud.com,2016-06-05:static/blog/40323233-cdw11bao-gao.html</id><summary type="html">&lt;p&gt;1
cdw11
&lt;/p&gt;
&lt;p&gt;編輯&lt;/p&gt;</summary><category term="40323233"></category></entry><entry><title>40323230 W11內容</title><link href="http://cdw11-40323250.rhcloud.com/static/blog/40323230-w11nei-rong.html" rel="alternate"></link><updated>2016-06-05T08:20:29+08:00</updated><author><name>40323230</name></author><id>tag:cdw11-40323250.rhcloud.com,2016-06-05:static/blog/40323230-w11nei-rong.html</id><summary type="html">&lt;p&gt;cdw11內容規畫 :&lt;br /&gt;

&lt;h3&gt;改變鍊條的程式碼，增加第二個鍊條，並能使用6個變數調整兩個鍊條的大小。此外能自行調整使用者變數數量來產生鍊條。&lt;/h3&gt;
&lt;br/&gt;
&lt;h3&gt;完成圖:&lt;/h3&gt;
&lt;br/&gt;
&lt;h3&gt;1個變數:&lt;/h3&gt;
&lt;img src="http://i.imgur.com/8m0gp8q.jpg"&gt;
&lt;br/&gt;
&lt;h3&gt;2個變數:&lt;/h3&gt;
&lt;img src="http://i.imgur.com/gO42T8z.jpg"&gt;
&lt;br/&gt;
&lt;h3&gt;3個變數:&lt;/h3&gt;
&lt;img src="http://i.imgur.com/LQxJtiO.jpg"&gt;
&lt;br/&gt;
&lt;h3&gt;4個變數:&lt;/h3&gt;
&lt;img src="http://i.imgur.com/oNITwnx.jpg"&gt;
&lt;br/&gt;
&lt;h3&gt;5個變數:&lt;/h3&gt;
&lt;img src="http://i.imgur.com/SQpmEMH.jpg"&gt;
&lt;br/&gt;
&lt;h3&gt;6個變數:&lt;/h3&gt;
&lt;img src="http://i.imgur.com/heHSknY.jpg"&gt;&lt;/p&gt;</summary><category term="40323230"></category></entry><entry><title>40323218 cdw11 報告</title><link href="http://cdw11-40323250.rhcloud.com/static/blog/40323218-cdw11-bao-gao.html" rel="alternate"></link><updated>2016-06-05T08:20:29+08:00</updated><author><name>40323218</name></author><id>tag:cdw11-40323250.rhcloud.com,2016-06-05:static/blog/40323218-cdw11-bao-gao.html</id><summary type="html">&lt;p&gt;啟動 cdw11 協同專案&lt;/p&gt;


&lt;h3&gt;心得 : &lt;/h3&gt;

&lt;p&gt;123&lt;/p&gt;</summary><category term="40323218"></category><category term="cdw11"></category></entry></feed>